<Window x:Class="Panels.StackPanelSample"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Panels"
        mc:Ignorable="d"
        Title="StackPanelSample" Height="200" Width="250"
        WindowStartupLocation="CenterScreen">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="2"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
        <!-- StackPanel doesn't really care whether or not there's enough room for the content -->
        <!-- the default orientation of the StackPanel is Vertical -->
        <!-- the StackPanel stretches its child control by default -->
        <StackPanel>
            <Button>Button 1</Button>
            <Button HorizontalAlignment="Stretch">Button 2</Button>
            <Button HorizontalAlignment="Left">Button 3</Button>
            <Button HorizontalAlignment="Center">Button 4</Button>
            <Button HorizontalAlignment="Right">Button 5</Button>
        </StackPanel>
        <Border Grid.Row="1" Background="Black"/>
        <StackPanel Grid.Row="2" Orientation="Horizontal">
            <Button>Button 1</Button>
            <Button VerticalAlignment="Stretch">Button 2</Button>
            <Button VerticalAlignment="Top">Button 3</Button>
            <Button VerticalAlignment="Center">Button 4</Button>
            <Button VerticalAlignment="Bottom">Button 5</Button>
        </StackPanel>

    </Grid>
</Window>
